from tensorflow.keras.datasets import reuters
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Activation
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.utils import to_categorical

max_words = 10000
(x_train, y_train), (x_test, y_test) = reuters.load_data(num_words=max_words)
tokenizer = Tokenizer(num_words=max_words)
x_train = tokenizer.sequences_to_matrix(x_train, mode='binary')
x_test = tokenizer.sequences_to_matrix(x_test, mode='binary')

y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

model = Sequential([Dense(512, input_shape=(max_words,), activation='relu'),Dropout(0.5),Dense(512, activation='relu'),Dropout(0.5),Dense(46, activation='softmax')])
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=5, batch_size=32, validation_split=0.2)
score = model.evaluate(x_test, y_test, batch_size=32)
print(f'Test Accuracy: {score[1]:.2f}')
